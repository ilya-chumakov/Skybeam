using System;
using System.Threading;
using System.Threading.Tasks;

using Skybeam;
using Skybeam.Abstractions;

// <auto-generated/>
namespace PipelineNamespacePlaceholder.Skybeam.Tests.Snapshots.NestedHandler;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Skybeam", "%VERSION%")]
[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Always)]
public class NestedHandlerPipeline(IServiceProvider provider)
    : IRequestHandler<
        global::Skybeam.Tests.Snapshots.NestedHandler.NestedAlpha,
        global::Skybeam.Tests.Snapshots.NestedHandler.NestedOmega>
{
    public Task<global::Skybeam.Tests.Snapshots.NestedHandler.NestedOmega> HandleAsync(
        global::Skybeam.Tests.Snapshots.NestedHandler.NestedAlpha input,
        CancellationToken ct = default)
    {
        return PipelineBuilder.Decorate<
            global::Skybeam.Tests.Snapshots.NestedHandler.NestedHandler,
            global::Skybeam.Tests.Snapshots.NestedHandler.NestedAlpha,
            global::Skybeam.Tests.Snapshots.NestedHandler.NestedOmega
        >(provider, input, ct)();
    }
}